services:
    db:
        image: postgres:16-alpine
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: untis_pro
        ports:
            - '5432:5432'
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 5s
            timeout: 5s
            retries: 10

    backend:
        build:
            context: ./untis-pro-backend
            dockerfile: Dockerfile
        depends_on:
            db:
                condition: service_healthy
        environment:
            # Server
            PORT: 3001
            NODE_ENV: production
            CORS_ORIGIN: http://localhost:8080
            # Auth
            JWT_SECRET: change-me-please
            # Prisma
            DATABASE_URL: postgresql://postgres:postgres@db:5432/untis_pro?schema=public
            # Enter Untis defaults here
            UNTIS_DEFAULT_SCHOOL: hhg-zw
            UNTIS_HOST: herakles.webuntis.com
            # Prisma engine (ensure Node-API engine)
            PRISMA_CLIENT_ENGINE_TYPE: library
            # Optional admin login
            UNTIS_ADMIN_USERNAME: admin
            UNTIS_ADMIN_PASSWORD: admin
        ports:
            - '3001:3001'
        healthcheck:
            test: ['CMD', 'curl', '-fsS', 'http://localhost:3001/health']
            interval: 10s
            timeout: 5s
            retries: 12
            start_period: 40s
        restart: unless-stopped

    frontend:
        build:
            context: ./untis-pro-frontend
            dockerfile: Dockerfile
            args:
                # Ensure Vite sees these at build time
                VITE_API_BASE: ${VITE_API_BASE}
                VITE_ENABLE_DEVELOPER_MODE: ${VITE_ENABLE_DEVELOPER_MODE}
        depends_on:
            backend:
                condition: service_healthy
        ports:
            - '8080:80'
        env_file:
            - .env
        # Optional: also propagate as runtime envs (not required for Vite, but useful for debugging)
        environment:
            - VITE_API_BASE=${VITE_API_BASE}
            - VITE_ENABLE_DEVELOPER_MODE=${VITE_ENABLE_DEVELOPER_MODE}
        restart: unless-stopped

volumes:
    pgdata:
